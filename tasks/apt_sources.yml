---
- name: Build 'base_apt_sources' if not supplied
  when: base_apt_sources | length == 0
  block:
  - name: Update apt sources URL to distribution default if needed
    ansible.builtin.set_fact:
      base_apt_url: "{{ lookup('ansible.builtin.vars', (ansible_distribution | lower + '_apt_url')) }}"
    when: base_apt_url | length == 0

  - name: Update apt components to distribution default if needed
    ansible.builtin.set_fact:
      base_apt_components: "{{ lookup('ansible.builtin.vars', (ansible_distribution | lower + '_apt_components')) }}"
    when: base_apt_components | length == 0

  - name: Ensure x64 architecture is configured appropriately
    ansible.builtin.lineinfile:
      create: true
      dest: /var/lib/dpkg/arch
      group: root
      line: amd64
      mode: u=rw,g=r,o=r
      owner: root
      state: "{{ 'present' if base_apt_arch_x64 else 'absent' }}"

  - name: Ensure i386 architecture is configured appropriately
    ansible.builtin.lineinfile:
      create: true
      dest: /var/lib/dpkg/arch
      group: root
      line: i386
      mode: u=rw,g=r,o=r
      owner: root
      state: "{{ 'present' if base_apt_arch_i386 else 'absent' }}"

  - name: Determine base prefix for repository configurations
    ansible.builtin.set_fact:
      source_base: "[trusted=yes] {{ base_apt_url }}"

  - name: Determine common prefix for repository configurations
    ansible.builtin.set_fact:
      source_common: "{{ source_base }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }}"

  - name: Determine 'main' repository configuration
    ansible.builtin.set_fact:
      sources_main:
        - "{{ item }} {{ source_common }} {{ base_apt_components | joi(' ') }}"
    loop: "{{ base_apt_types }}"

  - name: Determine 'backports' repository configuration
    ansible.builtin.set_fact:
      sources_backports:
        - "{{ item }} {{ source_common }}-backports {{ base_apt_components | join(' ') }}"
    loop: "{{ base_apt_types }}"

  - name: Determine 'proposed' repository configuration
    ansible.builtin.set_fact:
      sources_proposed:
        - "{{ item }} {{ source_common }}-proposed {{ base_apt_components | join(' ') }}"
    loop: "{{ base_apt_types }}"

  - name: Determine 'security' repository configuration
    ansible.builtin.set_fact:
      sources_security:
        - "{{ item }} {{ source_common }}-security {{ base_apt_components | join(' ') }}"
    loop: "{{ base_apt_types }}"

  - name: Determine 'updates' repository configuration
    ansible.builtin.set_fact:
      sources_updates:
        - "{{ item }} {{ source_common }}-updates {{ base_apt_components | join(' ') }}"
    loop: "{{ base_apt_types }}"

  - name: Enable 'main' repository
    ansible.builtin.set_fact:
      base_apt_sources: "{{ sources_main }}"

  - name: Enable 'backports' repository if applicable
    ansible.builtin.set_fact:
      base_apt_sources: "{{ base_apt_sources + sources_backports }}"
    when: base_apt_repo_backports

  - name: Enable 'proposed' repository if applicable
    ansible.builtin.set_fact:
      base_apt_sources: "{{ base_apt_sources + sources_proposed }}"
    when:
      - base_apt_repo_proposed
      - ansible_distribution | lower == 'ubuntu'

  - name: Enable 'security' repository if applicable
    ansible.builtin.set_fact:
      base_apt_sources: "{{ base_apt_sources + sources_security }}"
    when: base_apt_repo_security

  - name: Enable 'updates' repository if applicable
    ansible.builtin.set_fact:
      base_apt_sources: "{{ base_apt_sources + sources_updates }}"
    when: base_apt_repo_updates

- name: Ensure /etc/apt/sources.list is configured properly
  ansible.builtin.template:
    dest: /etc/apt/sources.list
    group: root
    mode: u=rw,g=r,o=r
    owner: root
    src: sources.list.j2

- name: Update APT package cache
  ansible.builtin.apt:
    update_cache: true
  changed_when: false
  when: not ansible_check_mode
